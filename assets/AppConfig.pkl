@go.Package { name = "github.com/prskr/go-dito/infrastructure/config" }
module prskr.dito.AppConfig

import "package://pkg.pkl-lang.org/pkl-go/pkl.golang@0.7.0#/go.pkl"

class HttpServerOptions {
  readHeaderTimeout: Duration = 100.ms
  shutdownTimeout: Duration = 100.ms
}

class HttpRequestOptions {
  maxBodySize: DataSize = 500.kb
}

typealias Port = UInt16(this > 0)

class Server {
  host: String = "0.0.0.0"
  port: Port = 3498

  serverOptions: HttpServerOptions
  requestOptions: HttpRequestOptions
}

typealias LogLevel = "error"|"warn"|"info"|"debug"
typealias LogFormat = "text"|"json"

class Logging {
  addSource: Boolean = false
  level: LogLevel = "info"
  format: LogFormat = "json"
}

class Telemetry {
  logging: Logging
  shutdownTimeout: Duration = 100.ms
}

typealias Rule = String

class OpenApiSpec {
  schemaPath: String
}

class GraphSchemaSource {
  path: String
  builtIn: Boolean = false
}

class GraphQlSpec {
  schemas: Set<GraphSchemaSource>
  rules: Set<Rule>
}

class PlainRuleSpec {
  rules: Set<Rule>
}

server: Server

telemetry: Telemetry

domains: Mapping<String, PlainRuleSpec|OpenApiSpec|GraphQlSpec>